Written Questions

Q1. Run the web crawler using the configurations located at src/main/config/written_question_1a.json and
    src/main/config/written_question_1b.json. The only difference between these configurations is that one always uses
    the sequential crawler and the other always uses the parallel crawler. Inspect the profile output in
    profileData.txt.

    If you are using a multi-processor computer, you should notice that SequentialWebCrawler#crawl and
    ParallelWebCrawler#crawl took about the same amount of time, but PageParserImpl#parse took much longer when run with
    the ParallelWebCrawler.

    Why did the parser take more time when run with ParallelWebCrawler?

    A1: This is due to the difference in the summing method. One sums the time taken in all threads, the other the duration received.


Q2. Your manager ran your crawler on her old personal computer, using the configurations from Q1, and she notices that
    the sequential crawler actually outperforms the parallel crawler. She would like to know why.

    (a) Suggest one reason why the sequential web crawler was able to read more web pages than the parallel crawler.
        (Hint: Try setting "parallelism" to 1 in the JSON configs to simulate your manager's computer.)

        A 2a: the parallel crawler is trying to use more resources from the PC but as there is only 1 thread it cannot perform the tasks in parallel.
        The sequential on the other hand is performing all the task sequentially so it's only using 1 thread at a time

    (b) Suggest one scenario in which the parallel web crawler will almost certainly perform better than the sequential
        crawler. Why will it perform better?

        A 2b: on a PC with multiple cores the parallel will perform better as it will execute more tasks at the same time

Q3. Analyze your method profiler through the lens of Aspect Oriented Programming, by answering the following questions:

    (a) What cross-cutting concern is being addressed by the com.udacity.webcrawler.profiler.Profiler class?

    A 3a: Performance

    (b) What are the join points of the Profiler in the web crawler program?

    A 3b: @Profiled

Q4. Identify three (3) different design patterns used in this project, and explain which interfaces, classes, and/or
    libraries use or implement those design patterns.

    For each pattern, name one thing about the pattern that you LIKED, and one thing you DISLIKED. If you did not like
    anything, you can name two things you disliked.

    A 4:
    1.Dependency Injection - WebCrawlerMain and Profiler.
        + Simplified Tests
        - Increase in Classes

    2.Proxy - ProfilerImpl
        + Interface method
        - Increased Complexity and Readability

    3.Builder - CrawlerConfiguration, ParserModule
        + Simplified creation of classes
        - Code line increase


